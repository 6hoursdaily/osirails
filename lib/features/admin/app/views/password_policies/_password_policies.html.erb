<div>
  <% form_tag( password_policies_path, :method => 'put' ) do %>
    
    <h2>Politique de mot de passe</h2>
    <p>
      <%= display_level(@level) %>
    </p>
    
    <h2>D&eacute;lai d'expiration des mots de passe</h2>
    <p>
      Les utilisateurs devront renouveler leur mot de passe tous les <%= display_validity(@validity) %> jour(s). (mettre 0 pour que le mot de passe n'expire jamais)
    </p>
    
    <h2>Mod&egrave;le de cr&eacute;ation automatique des comptes utilisateurs</h2>
    <p>
      <%= display_pattern(@pattern) %>
    </p>
    <p style="display: none;" id="pattern_help">Vous devez utiliser le modèle suivant ' [attribut,option] ' pour composer votre squellette :<br/>
      - attribut : représente les attributs que possédent un utilisateur(first_name,last_name)<br/>
      - option : représente le nombre de caract&egrave;res à garder dans l&apos;attribut(aucune valeur correspond &agrave; l&apos;attribut en entier)<br/>
      - ex : soit l&apos;employ&eacute;e Jean DUPPON et le squellette [FIRST_NAME,1]_[last_name] => J_duppon<br/><br/>
      Comme vous avez pu le constater, il suffit de mettre l&apos;attribut en majuscule ou minuscule pour choisir la casse du contenu de l'attribut.<br/>
      De plus il vous est possible d&apos;ins&eacute;rer autant de caract&egrave;res que vous voulez entre les modules sauf les carat&egrave;res interdits suivants &#40; &#35;&#123; et &#124; &#41;<br/>
      Exemple avec un modèle type mail: [first_name].[last_name]@emr-oi.fr 
    </p>
    
    <p>
    <%= submit_tag "Valider" if is_form_view?%>
    </p>
  <% end %>
</div>
