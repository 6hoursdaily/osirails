<% content_for :header do %>
<script type="text/javascript" src="/javascripts/calendar/calendar.js"></script> 
<script type="text/javascript" src="/javascripts/calendar/lang/calendar-fr.js"></script> 
<script type="text/javascript" src="/javascripts/calendar/calendar-setup.js"></script>

<link href="/stylesheets/mini-calendar-skins/calendar-blue.css" rel="stylesheet" type="text/css"/>
<% end %>
<%= osibox_init :url => {:controller => 'products_catalog', :params => {:type => 'popup'}}, :width => '1280px', :scroll => 'auto', :css => 'max-height: 500px;' %>

<script type="text/javascript">
taxes_vat = <%= ConfigurationManager.sales_taxes_vat %>;

var catalog = document.getElementById('catalog');
var div_elm = document.createElement('div');
div_elm.innerHTML = "<button onclick=\"osibox_close(); return false;\" style=\"float :right;\">Fermer</button> <button onclick=\"add_reference(); return false;\" style=\"float :right;\">Ajouter</button> <button onclick=\"add_reference(); osibox_close(); return false;\" style=\"float :right;\">Ajouter et fermer</button>";
catalog.appendChild(div_elm);

function add_reference () {
	var all_ref = document.getElementById('select_reference').childNodes;
	if (all_ref[0].selected) { alert('Veuillez sélectionner une référence'); return false; };
	for (var i=0; i < all_ref.length; i++) {
		if (all_ref[i].selected) {
			new Ajax.Request('/product_references/' + all_ref[i].value + '.json', {
				method: 'get',
				onSuccess: function(transport) {
					var ref_obj = transport.responseText.evalJSON()["product_reference"];
					append_reference(ref_obj);
				}
			});
			return true;
		};
	};
	return false;
}

function remove_reference (obj) {
	var div_input = document.getElementById('input_references');
	var input_id = obj.parentNode.nextSibling;
	input_id.setAttribute('name', 'delete_product_reference[]');
	div_input.appendChild(input_id);
	obj.ancestors()[1].remove();
}

function append_reference (ref_obj) {
	var list = document.getElementById('list_product').lastChild;
	list.innerHTML += "<tr><td>" + (ref_obj['reference'] || ref_obj['product_reference']['reference']) + "</td><td><textarea name=\"product_references[][description]\">" + (ref_obj['name'] || '') + ref_obj['description'] + "</textarea></td><td><input type=\"text\" name=\"product_references[][quantity]\" class=\"quantity\" onkeyup=\"calculate(this)\" size=\"3\" value=\"1\" /></td><td><input type=\"text\" name=\"product_references[][unit_price]\" onkeyup=\"calculate(this)\" class=\"unit_price\" value=\"" + (ref_obj['production_cost_manpower'] || ref_obj['unit_price']) + "\" /></td><td class=\"total_price\"></td><td class=\"total_price_taxes\"></td><td><img src=\"/images/cross_16x16.png\" onclick=\"remove_reference(this);\"></td></tr>";

	var all_tr = document.getElementById('list_product').getElementsByTagName('tr');
	var last_tr = all_tr[all_tr.length-1];
	calculate(last_tr.getElementsByClassName('quantity')[0]);

	var input_ref = document.createElement('input');
	input_ref.setAttribute('type', 'hidden');

	if (ref_obj['unit_price']) {
		var input = document.createElement('input');
		input.setAttribute('type', 'hidden');
		input.setAttribute('value', ref_obj['id']);
		input.setAttribute('name', 'product_references[][id]');
		last_tr.appendChild(input);

		input_ref.setAttribute('value', ref_obj['product_reference_id']);
	} else {
		input_ref.setAttribute('value', ref_obj['id']);
	};

	input_ref.setAttribute('name', 'product_references[][product_reference_id]');
	last_tr.appendChild(input_ref);

	return true;
}

function calculate (elm) {
	var row_elm = elm.ancestors()[1];
	var quantity = row_elm.getElementsByClassName('quantity')[0];
	var unit_price = row_elm.getElementsByClassName('unit_price')[0];
	var total_price = row_elm.getElementsByClassName('total_price')[0];
	var total_price_taxes = row_elm.getElementsByClassName('total_price_taxes')[0];
	total_price.innerHTML = parseFloat(unit_price.value) * parseInt(quantity.value);
	total_price_taxes.innerHTML = parseFloat(total_price.innerHTML) + parseFloat(total_price.innerHTML) / 100 * taxes_vat;
}
</script>

<% form_for @estimate, :url => order_estimate_path(@order, @estimate) do |e| %>
<%= e.error_messages %>
<h2>Conditions commerciales</h2>
<p>
<%= e.label :validity_date, 'Date de fin de validité' %>
<%= e.text_field :validity_date %>
</p>
<p>
<%= e.label :carriage_costs, 'Frais de port' %>
<%= e.text_field :carriage_costs %>
</p>
<p>
<%= e.label :reduction, 'Remise' %>
<%= e.text_field :reduction %>
</p>
<p>
<%= e.label :account, 'Acompte' %>
<%= e.text_field :account %>
</p>

<h2>Produit de la commande</h2>

<table id="list_product">
	<tr>
		<th>Référence</th>
		<th>Désignation</th>
		<th>Quantité</th>
		<th>P.U. HT</th>
		<th>Montant HT</th>
		<th>Montant TTC</th>
		<th>Action</th>
	</tr>
</table>

<button onclick="osibox_open(); return false;">Ouvrir le catalogue de produits</button>

<div id="input_references"></div>

<%= params[:action] == 'show' ? display_remarks(@remarks) : display_remarks_and_add_remark_text_area(@remarks, @step)%>

<% if params[:action] == 'new' %>
<%= e.submit 'Créer' %>
<% else %>
<%= e.submit 'Modifier' %>
<%= e.submit 'Cloturer' %>
<% end %>
<% end %>

<script type="text/javascript">
Calendar.setup({ 
	inputField : "estimate_validity_date",
	ifFormat : "%Y-%m-%d",
	timeFormat : "24"
});
<% @estimate.estimates_product_references.each do |epr| %>
append_reference('<%= epr.to_json(:include => :product_reference) %>'.evalJSON()["estimates_product_reference"])
<% end %>
</script>