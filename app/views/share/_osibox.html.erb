<div style="visibility: hidden;
						position: absolute;
						left: 0px;
						top: 0px;
						right: 0px;
						z-index: 999;
						background-color: <%= options[:wall_color] %>;
						opacity: <%= options[:wall_opacity] %>;
						-moz-opacity: <%= options[:wall_opacity] %>;
						filter:alpha(opacity=<%= options[:wall_opacity].to_f * 100 %>);"
	id="osibox_wall<%= options[:id] %>" class="osibox">
</div>
<div style="visibility: hidden;
						position: absolute;
						top: 0px;
						left: 0px;
						z-index: 1000;
						padding: 8px;
						overflow: auto;
						-moz-border-radius: <%= options[:border_radius] %>;
						border: <%= options[:border_size] %> <%= options[:border_type] %> <%= options[:border_color] %>;
						background-color: <%= options[:background_color] %>;
						<% unless options[:height].nil? %>
						height: <%= options[:height] %>;
						<% end %>
						<% unless options[:width].nil? %>
						width: <%= options[:width] %>;
						<% end %>
						overflow: <%= options[:scroll] %>;"
	id="osibox_popup<%= options[:id] %>" class="osibox">
	<a style="float: right; font-size: 12px;" onclick="osibox_close();">Fermer</a><br>
	<% if !options[:partial].nil? %>
		<%= render :partial => options[:partial], :locals => options[:locals] %>
	<% elsif !options[:url].empty? %>
		<%= render_component options[:url] %>
	<% else %>
	 <% raise ArgumentError, "missing partial or url" %>
	<% end %>
</div>
<script type="text/javascript">
osibox_wall = 'osibox_wall';
osibox_popup = 'osibox_popup';

osibox_wall_elm = document.getElementById(osibox_wall + '<%= options[:id] %>');
osibox_popup_elm = document.getElementById(osibox_popup + '<%= options[:id] %>');

document.body.appendChild(osibox_wall_elm);
document.body.appendChild(osibox_popup_elm);

function osibox_open (id) {
	id = id ? id : 1;
	
	osibox_wall_elm = document.getElementById(osibox_wall + id);
	osibox_popup_elm = document.getElementById(osibox_popup + id);
	
	osibox_popup_elm.style.display = 'block';
	osibox_wall_elm.style.display = 'block';
	
	var top = (document.body.offsetHeight - osibox_popup_elm.offsetHeight) / 2;
	if (top < 10) {
		top = 10;
	};
	var left = (document.body.offsetWidth - osibox_popup_elm.offsetWidth) / 2;
	if (left < 10) {
		left = 10;
	};
	
	osibox_popup_elm.style.top = top + document.documentElement.scrollTop + 'px';
	osibox_popup_elm.style.left = left + 'px';
	osibox_wall_elm.style.height = document.documentElement.scrollHeight + "px";
	
	if (osibox_popup_elm.offsetHeight > (document.body.offsetHeight + 20) ) {
		osibox_popup_elm.style.height = (document.body.offsetHeight - 50) + 'px';
		osibox_popup_elm.style.overflow = 'auto';
	};
	
	document.body.style.overflow = 'hidden';
	
	osibox_wall_elm.style.visibility = 'visible';	
	osibox_popup_elm.style.visibility = 'visible';
	
	osibox_popup_elm.style.display = 'none';
	Effect.Appear(osibox_popup_elm);
}

function osibox_close () {
	osibox_elements = document.getElementsByClassName('osibox');

	for (var i=0; i < osibox_elements.length; i++) {
		Effect.Fade(osibox_elements[i], {duration: 0.6});
		setTimeout(function() {
			osibox_elements[i].style.visibility = 'hidden';
			}, 600);
		};
		document.body.style.overflow = '';
}
</script>